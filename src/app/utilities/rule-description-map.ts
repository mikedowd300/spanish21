import { ConditionsEnum, DoubleDownOnEnum, InputTypeEnum, RuleInput } from '../models'

export const RuleDescriptionMap = {
  SI7: { 
    description: "Dealer stays on soft 17",
    why: "",
    inputType: InputTypeEnum.CHECKBOX,
    ruleName: ConditionsEnum.SI7,
  },
  RSA: { 
    description: "Re-split aces",
    why: "",
    inputType: InputTypeEnum.CHECKBOX,
    ruleName: ConditionsEnum.RSA,
  },
  MHFS: { 
    description: "Maximum hands from a split",
    why: "",
    inputType: InputTypeEnum.NUMBER,
    min: 1,
    max: 7, 
    ruleName: ConditionsEnum.MHFS,
  },
  DSA: { 
    description: "Player may draw on split aces",
    why: "",
    inputType: InputTypeEnum.CHECKBOX,
    ruleName: ConditionsEnum.DSA,
  },
  RD: { 
    description: "Re-doubling is allowed",
    why: "",
    inputType: InputTypeEnum.CHECKBOX,
    ruleName: ConditionsEnum.RD,
  },
  RRD: { 
    description: "Re-re-doubling is allowed",
    why: "",
    inputType: InputTypeEnum.CHECKBOX,
    ruleName: ConditionsEnum.RRD,
  },
  DS21: { 
    description: "Player may double a soft 21",
    why: "",
    inputType: InputTypeEnum.CHECKBOX,
    ruleName: ConditionsEnum.DS21,
  },
  DFL: { 
    description: "Player may double for less",
    why: "",
    inputType: InputTypeEnum.CHECKBOX,
    ruleName: ConditionsEnum.DFL,
  },
  RDFL: { 
    description: "Player may re-double for less",
    why: "",
    inputType: InputTypeEnum.CHECKBOX,
    ruleName: ConditionsEnum.RDFL,
  },
  DAS: { 
    description: "Player may double after splits",
    why: "",
    inputType: InputTypeEnum.CHECKBOX,
    ruleName: ConditionsEnum.DAS,
  },
  MSE: { 
    description: "Mid-shoe entry is allowed",
    why: "",
    inputType: InputTypeEnum.CHECKBOX,
    ruleName: ConditionsEnum.MSE,
  },
  LCD: { 
    description: "Last chance doubling",
    why: "",
    inputType: InputTypeEnum.CHECKBOX,
    ruleName: ConditionsEnum.LCD,
  },
  reshuffleOnDealerChange: { 
    description: "New dealer shuffles before dealing",
    why: "",
    inputType: InputTypeEnum.CHECKBOX,
    ruleName: ConditionsEnum.reshuffleOnDealerChange,
  },
  burnCardOnDealerChange: { 
    description: "New dealer burns a card before dealing",
    why: "",
    inputType: InputTypeEnum.CHECKBOX,
    ruleName: ConditionsEnum.burnCardOnDealerChange,
  },
  payRatio: { 
    description: "The Black Jack pay ratio",
    why: "",
    inputType: InputTypeEnum.RADIO,
    ruleName: ConditionsEnum.payRatio,
    radioValues: null,
  },
  payRatioFromAA: { 
    description: "The Black Jack pay ratio for split aces",
    why: "",
    inputType: InputTypeEnum.RADIO,
    ruleName: ConditionsEnum.payRatioFromAA,
    radioValues: null,
  },
  canSurrenderAfterSplit: {
    description: "Allow surrender after a split",
    why: "",
    inputType: InputTypeEnum.CHECKBOX,
    ruleName: ConditionsEnum.canSurrenderAfterSplit,
  },
  canRescueAfterSplit: {
    description: "Allow Rescue after a split",
    why: "",
    inputType: InputTypeEnum.CHECKBOX,
    ruleName: ConditionsEnum.canRescueAfterSplit,
  },
  LS: { 
    description: "Late surrender",
    why: "",
    inputType: InputTypeEnum.CHECKBOX,
    ruleName: ConditionsEnum.LS,
  },
  spotsPerTable: { 
    description: "Spots per table",
    why: "",
    min: 1,
    max: 10, 
    inputType: InputTypeEnum.NUMBER,
    ruleName: ConditionsEnum.spotsPerTable,
  },
  decksPerShoe: { 
    description: "Decks per shoe",
    why: "",
    inputType: InputTypeEnum.RANGE,
    min: 1,
    max: 10, 
    ruleName: ConditionsEnum.decksPerShoe,
  },
  cardsBurned: { 
    description: "Number of cards burned after shuffle",
    why: "",
    inputType: InputTypeEnum.RANGE,
    min: 0,
    max: 10, 
    ruleName: ConditionsEnum.cardsBurned,
  },
  minBet: { 
    description: "Table minimum bet",
    why: "",
    inputType: InputTypeEnum.NUMBER,
    min: 1, 
    ruleName: ConditionsEnum.minBet,
  },
  maxBet: { 
    description: "Table maximum bet",
    why: "",
    inputType: InputTypeEnum.NUMBER,
    min: 1,
    ruleName: ConditionsEnum.maxBet,
  },
  shufflePoint: { 
    description: "Shuffle point as a % of total cards",
    why: "",
    inputType: InputTypeEnum.RANGE,
    min: 1,
    max: 99, 
    ruleName: ConditionsEnum.shufflePoint,
  },
  countBurnCard: { 
    description: "Player sees a burn card",
    why: "",
    inputType: InputTypeEnum.CHECKBOX,
    ruleName: ConditionsEnum.countBurnCard,
  },
  handsPerDealer: { 
    description: "Number of hands per dealer",
    why: "",
    inputType: InputTypeEnum.NUMBER,
    min: 1, 
    ruleName: ConditionsEnum.handsPerDealer,
  },
  DD: { 
    description: "Player may double on:",
    why: "",
    inputType: InputTypeEnum.RADIO,
    ruleName: ConditionsEnum.DD,
    radioValues: null,
    displayInColumn: true
  },
}